@model JackOfAllCodes.Web.Models.ViewModels.EditPostRequest
@{
}

<div class="bg-secondary bg-opacity-10 py-2">
    <div class="container">
        <h1>Edit Posts - Admin Functionality</h1>
    </div>
</div>

<div class="container py-5">
    @if (Model != null)
    {
        <form method="post">
            <div class="mb-3">
                <label class="form-label">Id</label>
                <input type="text" class="form-control" id="id" asp-for="Id" readonly />
            </div>
            <div class="mb-3">
                <label class="form-label">Heading</label>
                <input type="text" class="form-control" id="heading" asp-for="Heading" />
            </div>
            <div class="mb-3">
                <label class="form-label">PageTitle</label>
                <input type="text" class="form-control" id="pageTitle" asp-for="PageTitle" />
            </div>
            <div class="mb-3">
                <label class="form-label">Content</label>
                <div id="content-editor" style="height: 300px; border: 1px solid #ced4da;"></div>
                <textarea class="form-control d-none" id="content" asp-for="Content"></textarea>
            </div>
            <div class="mb-3">
                <label class="form-label">ShortDescription</label>
                <input type="text" class="form-control" id="shortDescription" asp-for="ShortDescription" />
            </div>
            <div class="mb-3">
                <label class="form-label">Featured Image Upload</label>
                <input type="file" id="featuredImageUpload" class="form-control" />

                @if (Model.FeaturedImageUrl != null)
                {
                    <img src="@Model.FeaturedImageUrl" id="featuredImageDisplay" style="display:block;width:300px;" />
                }
                else
                {
                    <img src="" id="featuredImageDisplay" style="display:none;width:300px;" />
                }
            </div>
            <div class="mb-3">
                <label class="form-label">FeaturedImageUrl</label>
                <input type="text" class="form-control" id="featuredImageUrl" asp-for="FeaturedImageUrl" readonly />
            </div>
            <div class="mb-3">
                <label class="form-label">URL Handle</label>
                <input type="text" class="form-control" id="urlHandle" asp-for="UrlHandle" />
            </div>
            <div class="mb-3">
                <label class="form-label">Published Date</label>
                <input type="date" class="form-control" id="publishedDate" asp-for="PublishedDate"
                       value="@Model.PublishedDate.ToString("yyyy-MM-dd")" readonly />
            </div>
            <div class="mb-3">
                <label class="form-label">Author</label>
                <input type="text" class="form-control" id="author" asp-for="Author" />
            </div>
            <div class="form-check mb-3">
                <input class="form-check-input" type="checkbox" id="visible" asp-for="Visible">
                <label class="form-check-label">
                    Is Visible?
                </label>
            </div>
            <div class="mb-3">
                <label class="form-label">Tags</label>
                <select class="form-select" asp-items="@Model.Tags" asp-for="SelectedTags"> </select>
            </div>

            <div class="mb-3 d-flex">
                <button type="submit" class="btn btn-dark me-2">Update</button>
                <button type="submit" class="btn btn-danger" asp-area="" asp-controller="AdminPosts" asp-action="Delete">Delete</button>
            </div>
        </form>
    }
    else
    {
        <p>No blogs found!</p>
    }

</div>

@section Scripts {
    <!-- Quill JS -->
    <script src="https://cdn.quilljs.com/1.3.7/quill.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/quill-image-resize-module@3.0.0/image-resize.min.js"></script>
    <link href="https://cdn.quilljs.com/1.3.7/quill.snow.css" rel="stylesheet">

    <script>
        // Initialize Quill editor
        var quill = new Quill('#content-editor', {
            theme: 'snow',
            modules: {
                toolbar: [
                    ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
                    ['blockquote', 'code-block'],

                    [{ 'header': 1 }, { 'header': 2 }],               // custom button values
                    [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                    [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript
                    [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
                    [{ 'direction': 'rtl' }],                         // text direction

                    [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],

                    [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
                    [{ 'font': [] }],
                    [{ 'align': [] }],

                    ['clean'],                                         // remove formatting
                    ['link', 'image']                                 // add link and image
                ],
                imageResize: {                                       // Enable the image resize module
                    modules: ['Resize', 'DisplaySize', 'Toolbar']
                }
            }
        });

        // Set the initial content from the server-side model
        const initialContent = `@Html.Raw(Model.Content)`;
        quill.root.innerHTML = initialContent;

        // Sync Quill content with the hidden textarea on form submission
        const form = document.querySelector('form');
        const contentInput = document.getElementById('content');
        form.addEventListener('submit', function () {
            contentInput.value = quill.root.innerHTML;
        });

        // Custom image upload handler for Quill editor
        quill.getModule('toolbar').addHandler('image', function () {
            var fileInput = document.createElement('input');
            fileInput.setAttribute('type', 'file');
            fileInput.accept = 'image/*';
            fileInput.click();

            fileInput.onchange = async function () {
                var file = fileInput.files[0];
                if (!file) return;

                // Create FormData and append the selected file
                var formData = new FormData();
                formData.append('formFile', file);

                // Send the file to the server for upload
                const response = await fetch('/api/images', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                if (response.ok) {
                    // Insert the uploaded image URL into the editor
                    const range = quill.getSelection();
                    quill.insertEmbed(range.index, 'image', result.link);
                } else {
                    alert('Error uploading image');
                }
            };
        });

        const featuredUploadElement = document.getElementById('featuredImageUpload');
        const featuredImageUrlElement = document.getElementById('featuredImageUrl');
        const featuredImageDisplayElement = document.getElementById('featuredImageDisplay');

        async function uploadFeaturedImage(e) {

            let data = new FormData();
            data.append('formFile', e.target.files[0]);

            await fetch('/api/images', {
                method: 'POST',
                headers: {
                    'Accept': '*/*'
                },
                body: data
            }).then(response => response.json())
                .then(result => {
                    featuredImageUrlElement.value = result.link;
                    featuredImageDisplayElement.src = result.link;
                    featuredImageDisplayElement.style.display = 'block';
                });
        }
        featuredUploadElement.addEventListener('change', uploadFeaturedImage);

    </script>
}